#!/bin/bash

# This script is used to backup the correct dotfiles to the remote git repository
# The dotfiles are stored in the $XDG_CONFIG_HOME directory or in the $HOME/.config directory

# GIT structure
# .
# ├── backup
# ├── restore
# └── src
#     ├── OLD
#     │   ├── bash
#     │   ├── code-settings.json
#     │   ├── wofi
#     │   └── wofi.old
#     └── <PC_NAME>
#         ├── dunst
#         ├── fastfetch
#         ├── fish
#         ├── hypr
#         ├── kitty
#         ├── nvim
#         ├── tofi
#         ├── waybar
#         └── zed

# check if src/ has /etc/hostname of the current machine
# if not, create a new directory with the hostname of the current machine
# if yes, use the directory with the hostname of the current machine

PC_NAME=$(cat /etc/hostname)

# check if the directory exists
if [ ! -d src/$PC_NAME ]; then
    echo "Creating a new directory for the current machine"
    mkdir src/$PC_NAME
fi

# copy the dotfiles to the correct directory
# Note that the dotfiles should only be fish, hypr, kitty, nvim, tofi, waybar, zed
# The dotfiles should be stored in the $XDG_CONFIG_HOME directory or in the $HOME/.config directory

for dotfile in dunst fish hypr kitty nvim tofi waybar zed fastfetch
do
    if [ -d $XDG_CONFIG_HOME/$dotfile ]; then
	cp -r $XDG_CONFIG_HOME/$dotfile ./src/$PC_NAME/
    elif [ -d $HOME/.config/$dotfile ]; then
	cp -r $HOME/.config/$dotfile ./src/$PC_NAME/
    else
	echo "The $dotfile directory does not exist"
    fi
done

# copy eventual custom binaries and scripts
if [ -d $HOME/.local/bin ]; then
	for script in $(ls $HOME/.local/bin)
	do
		cp $HOME/.local/bin/$script ./src/$PC_NAME/scripts/
	done
fi

echo "The dotfiles have been copied to the correct directory"
tree -L 2 src/$PC_NAME
echo "The following files have changed:"
git diff --name-only
echo -e "\n"

exit 0
